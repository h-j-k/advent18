buildscript {
    ext.kotlin_version = "1.3.10"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.sonarqube" version "2.6.2"
    id "org.jetbrains.kotlin.jvm" version "1.3.10"
}

group "com.ikueb"
version "0.1-SNAPSHOT"

apply plugin: "kotlin"
apply plugin: "idea"
apply plugin: "jacoco"

repositories {
    mavenCentral()
}

dependencies {
    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testCompile "org.junit.jupiter:junit-jupiter-params:5.3.2"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    testCompile "org.assertj:assertj-core:3.11.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"
}

test {
    useJUnitPlatform()
    jacoco {
        destinationFile = file("$buildDir/jacoco/test.exec")
    }
}

sonarqube {
    properties {
        property "sonar.sources", "src/main"
        property "sonar.tests", "src/test"
        property "sonar.java.binaries", "$buildDir/classes"
        property "sonar.jacoco.reportPath", "$buildDir/reports/jacoco/test.exec"
        property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/test"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.java.reportPaths", "$buildDir/jacoco/test.exec"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
        xml.destination file("$buildDir/reports/jacoco/test/jacoco.xml")
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}